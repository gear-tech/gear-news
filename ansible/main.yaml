- name: "deploy to aws"
  hosts: all
  become: yes
  remote_user: ec2-user
  vars:
        FEEDLY_ACCESS_TOKEN: "{{ lookup('env','FEEDLY_ACCESS_TOKEN') }}"
        FEEDLY_REFRESH_TOKEN: "{{ lookup('env','FEEDLY_REFRESH_TOKEN') }}"
        TELEGRAM_BOT_TOKEN: "{{ lookup('env','TELEGRAM_BOT_TOKEN') }}"
        FREQ: "{{ lookup('env','FREQ') }}"
        COUNT: "{{ lookup('env','COUNT') }}"

#Do tasks
  tasks:
    - name: Copy newsbotservice if not exist
      template:
        src: newsbot.service
        dest: /lib/systemd/system/newsbot.service
      become: yes

    - name: Creates bot directory
      file:
        path: /home/ec2-user/bot
        state: directory

    - name: Copy script files
      copy:
        src: ../gear_news_bot.py
        dest: /home/ec2-user/bot/gear_news_bot.py

    - name: Copy script files
      copy:
        src: ../feedly_api.py
        dest: /home/ec2-user/bot/feedly_api.py 

    - name: Copy script files
      copy:
        src: ../telegram_api.py
        dest: /home/ec2-user/bot/telegram_api.py 

    - name: Create ide-backend file .env
      shell: >
        echo "FEEDLY_ACCESS_TOKEN=$FEEDLY_ACCESS_TOKEN">/home/ec2-user/bot/.env;echo "FEEDLY_REFRESH_TOKEN=$FEEDLY_REFRESH_TOKEN";>>/home/ec2-user/bot/.env;echo "TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN">>/home/ec2-user/bot/.env
      environment:
        FEEDLY_ACCESS_TOKEN: "{{ lookup('env','FEEDLY_ACCESS_TOKEN') }}"
        FEEDLY_REFRESH_TOKEN: "{{ lookup('env','FEEDLY_REFRESH_TOKEN') }}"
        TELEGRAM_BOT_TOKEN: "{{ lookup('env','TELEGRAM_BOT_TOKEN') }}"

    - name: Start ide-backend service
      systemd:
        name: newsbot
        state: started
        enabled: yes
        daemon-reload: yes
